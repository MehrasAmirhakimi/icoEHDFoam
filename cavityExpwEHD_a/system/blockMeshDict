/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

//Run using:
//m4 -P cavityEHD.m4 > blockMeshDict

//m4 definitions:






//*******************************************************************************

//Geometry



//Number of cells:




//x grading:


//y grading:


//*******************************************************************************



convertToMeters 0.01;

vertices
(

(0 0 0) // Vertex B0 = 0 
(1 0 0) // Vertex B1 = 1 
(1.5 0 0) // Vertex B2 = 2 
(2.5 0 0) // Vertex B3 = 3 
(0 1 0) // Vertex B4 = 4 
(1 1 0) // Vertex B5 = 5 
(1.5 1 0) // Vertex B6 = 6 
(2.5 1 0) // Vertex B7 = 7 
(0 2.5 0) // Vertex B8 = 8 
(1 2.5 0) // Vertex B9 = 9 
(1.5 2.5 0) // Vertex B10 = 10 
(2.5 2.5 0) // Vertex B11 = 11 

(0 0 0.25) // Vertex B12 = 12 
(1 0 0.25) // Vertex B13 = 13 
(1.5 0 0.25) // Vertex B14 = 14 
(2.5 0 0.25) // Vertex B15 = 15 
(0 1 0.25) // Vertex B16 = 16 
(1 1 0.25) // Vertex B17 = 17 
(1.5 1 0.25) // Vertex B18 = 18 
(2.5 1 0.25) // Vertex B19 = 19 
(0 2.5 0.25) // Vertex B20 = 20 
(1 2.5 0.25) // Vertex B21 = 21 
(1.5 2.5 0.25) // Vertex B22 = 22 
(2.5 2.5 0.25) // Vertex B23 = 23 

);


// Defining blocks:
blocks
(

	//Blocks :

        // block0
    hex (0 1 5 4 12 13 17 16) (40 40 1) simpleGrading (1 1 1) 
    hex (1 2 6 5 13 14 18 17) (20 40 1) simpleGrading (1 1 1)
    hex (2 3 7 6 14 15 19 18) (40 40 1) simpleGrading (1 1 1)
    hex (4 5 9 8 16 17 21 20) (40 60 1) simpleGrading (1 1 1)
    hex (6 7 11 10 18 19 23 22) (40 60 1) simpleGrading (1 1 1)
 
);

edges
();

// Defining patches:
boundary
(
    insulatedWall
    {
        type wall;
        faces
        (
            (0 12 16 4)
            (4 16 20 8)
            (8 20 21 9)
            (10 22 23 11)
            (11 23 19 7)
            (7 19 15 3)
        );
    }
    electrodeHV
    {
        type wall;
        faces
        (
            (5 9 21 17)
            (5 17 18 6)
            (10 6 18 22)
        );
    }
    electrodeG
    {
        type wall;
        faces
        (
            (0 1 13 12)
            (1 2 14 13)
            (2 3 15 14)
        );
    }

    frontAndBack
    {
        type empty;
        faces
        (
            (12 13 17 16)
            (13 14 18 17)
            (14 15 19 18)
            (16 17 21 20)
            (18 19 23 22)

            (0 4 5 1)
            (1 5 6 2)
            (2 6 7 3)
            (4 8 9 5)
            (6 10 11 7)
        );
    }
);

mergePatchPairs 
(
);

// ************************************************************************* //
